#!/bin/bash
#
# Designed to be called from vtl rc script
#
# * Copyright (C) 2005 Mark Harvey markh794 at gmail dot com
# *                                mark_harvey at symantec dot com
# *
# * This program is free software; you can redistribute it and/or modify
# * it under the terms of the GNU General Public License as published by
# * the Free Software Foundation; either version 2 of the License, or
# * (at your option) any later version.
# *
# * This program is distributed in the hope that it will be useful,
# * but WITHOUT ANY WARRANTY; without even the implied warranty of
# * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# * GNU General Public License for more details.
# *
# * You should have received a copy of the GNU General Public License
# * along with this program; if not, write to the Free Software
# * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

export PATH=/usr/bin:$PATH

if [ $# != 1 ]; then
	echo "Usage: $0 username"
	exit 1
fi

if [ X$MHVTL_CONFIG_PATH == "X" ]; then
	. /etc/mhvtl/mhvtl.conf
else
	. $MHVTL_CONFIG_PATH/mhvtl.conf
fi

USER=$1
TMP=/var/tmp/_build.$$
DRIVECONFIG=$MHVTL_CONFIG_PATH/device.conf
LIBCONTENTS=$MHVTL_CONFIG_PATH/library_contents
OPTIONS=""

# rc script will make sure this exists...
. $MHVTL_CONFIG_PATH/mhvtl.conf

if [ $VERBOSE -gt 2 ];then
	OPTIONS="-v -v -v"
elif [ $VERBOSE -gt 1 ];then
	OPTIONS="-v -v"
elif [ $VERBOSE -gt 0 ];then
	OPTIONS="-v"
else
	OPTIONS=""
fi

if [ ! -f $DRIVECONFIG ]; then
	echo "Sorry, Can't continue - no $DRIVECONFIG"
	exit 1
fi

# Test for new interface to dynamically add logical units.
if [ ! -f /sys/bus/pseudo/drivers/mhvtl/add_lu ]; then
	echo "Sorry, Can't continue - No kernel module loaded or out of date ??"
	echo "Please visit http://linuxvtl.googlepages.com for latest release"
	exit 1
fi

# OK, we know the module is loaded..
MAJOR=`grep vtl /proc/devices|awk '{print $1}'`

# First we need to setup & configure drives.
# Once all the drives are setup, query devices for config &
# build library structure based on information found.
count=`grep ^Drive $LIBCONTENTS|wc -l`

for a in `seq $count`
do
	grep "^Drive $a" $DRIVECONFIG

	# Make sure device node exists..
	# A better bet would be to configure udev...
	if [ ! -c /dev/mhvtl$count ]; then
		if [ -a /dev/mhvtl$count ]; then
			# Exists but not a char device... remove..
			rm /dev/mhvtl$count
		fi
		mknod /dev/mhvtl$count c $major $count
		chown vtl:vtl /dev/mhvtl$count
	fi

	# Start daemon for new lu
	vtltape -q $a $OPTIONS
done

# now start the library daemon
vtllibrary -q 0 $OPTIONS

rm -f $TMP

