#! /bin/bash
# Copyright (c) 2005 Mark Harvey
# All rights reserved.
#
# Author: Mark Harvey, 2005 - 2009
#	  mark794@gmail.com
#	  mark_harvey@symantec.com
#
# /etc/init.d/mhvtl
#
# Script to start mhvtl kernel module & vtltape userspace daemon
#
# Virtual tape & library system
#
# $Id: mhvtl,v 1.12.2.3 2006-08-30 06:35:01 markh Exp $
#
### BEGIN INIT INFO
# Provides:       mhvtl
# Required-Start: syslog
# Required-Stop:
# Default-Start:  2 3 5
# Default-Stop: 0 1 6
# Description:    Script to start/stop mhvtl kernel modules & vtltape userspace daemons
### END INIT INFO
#
# This is needed for RedHat ??
# chkconfig: - 30 30
#

USER=@USR@
MHVTL_CONFIG_PATH=@CONF_PATH@

OPTIONS=

export PATH=$PATH:/usr/bin

if [ -f /etc/rc.status ]; then
	. /etc/rc.status
	rc_reset
fi

# Create a 'device.conf' if it does not exist...
if [ ! -f $MHVTL_CONFIG_PATH/device.conf ]; then

mkdir -p $MHVTL_CONFIG_PATH
cat > $MHVTL_CONFIG_PATH/device.conf << VTL_CONF

VERSION: 3

# VPD page format:
# <page #> <Length> <x> <x+1>... <x+n>
# NAA format is an 8 hex byte value seperated by ':'
# Note: NAA is part of inquiry VPD 0x83
#
# Each 'record' is sperated by one (or more) blank lines.
# Each 'record' starts at column 1

Library: 0 CHANNEL: 0 TARGET: 0 LUN: 0
 Vendor identification: STK 
 Product identification: L700
 Product revision level: 5500
 Unit serial number: XYZZY
 NAA: 11:22:33:44:ab:cd:ef:00

Drive: 1 CHANNEL: 0 TARGET: 1 LUN: 0
 Vendor identification: QUANTUM 
 Product identification: SDLT600         
 Product revision level: 5500
 Unit serial number: XYZZY_A1         
 NAA: 11:22:33:44:ab:cd:ef:01
 Max density: 0x46
 VPD: b0 04 00 02 01 00

Drive: 2 CHANNEL: 0 TARGET: 2 LUN: 0
 Vendor identification: QUANTUM 
 Product identification: SDLT600         
 Product revision level: 5500
 Unit serial number: XYZZY_A2         
 NAA: 11:22:33:44:ab:cd:ef:02
 Max density: 0x46
 VPD: b0 04 00 02 01 00

Drive: 3 CHANNEL: 0 TARGET: 3 LUN: 0
 Vendor identification: QUANTUM 
 Product identification: SDLT600         
 Product revision level: 5500
 Unit serial number: XYZZY_A3         
 NAA: 11:22:33:44:ab:cd:ef:03
 Max density: 0x46
 VPD: b0 04 00 02 01 00

Drive: 4 CHANNEL: 0 TARGET: 4 LUN: 0
 Vendor identification: QUANTUM 
 Product identification: SDLT600         
 Product revision level: 5500
 Unit serial number: XYZZY_A4         
 NAA: 11:22:33:44:ab:cd:ef:04
 Max density: 0x46
 VPD: b0 04 00 02 01 00

VTL_CONF
fi

# Create a 'mhvtl.conf' if it does not exist...
if [ ! -f $MHVTL_CONFIG_PATH/mhvtl.conf ]; then

mkdir -p $MHVTL_CONFIG_PATH
cat > $MHVTL_CONFIG_PATH/mhvtl.conf << VTL_CONF

# Home directory for config file(s)
MHVTL_CONFIG_PATH=$MHVTL_CONFIG_PATH

# Default media capacity (500 M)
CAPACITY=500

# Set default verbosity [0|1]
VERBOSE=1

# Set kernel module debuging [0|1]
VTL_DEBUG=0
VTL_CONF
fi

# Upgrade mhvtl.conf with 'MHVTL_CONFIG_PATH' default
EXIST=`grep MHVTL_CONFIG_PATH $MHVTL_CONFIG_PATH/mhvtl.conf | wc -l`
if [ $EXIST -eq 0 ]; then
	echo "" >> $MHVTL_CONFIG_PATH/mhvtl.conf
	echo "# Default config directory" >> $MHVTL_CONFIG_PATH/mhvtl.conf
	echo "MHVTL_CONFIG_PATH=$MHVTL_CONFIG_PATH" >> $MHVTL_CONFIG_PATH/mhvtl.conf
fi

. $MHVTL_CONFIG_PATH/mhvtl.conf

# Earlier versions of mhvtl.conf may not contain the 'CAPACITY' string.
# Update if nessessary..
EXIST=`grep CAPACITY $MHVTL_CONFIG_PATH/mhvtl.conf|wc -l`
if [ $EXIST -eq 0 ]; then
	echo "" >> $MHVTL_CONFIG_PATH/mhvtl.conf
	echo "# Default media capacity" >> $MHVTL_CONFIG_PATH/mhvtl.conf
	echo CAPACITY=500 >> $MHVTL_CONFIG_PATH/mhvtl.conf
fi

# Now check for for 'library_contents'
if [ ! -f $MHVTL_CONFIG_PATH/library_contents ]; then
	echo
	echo "Could not locate library config file: $MHVTL_CONFIG_PATH/library_contents"
	echo "Creating a default one"
	echo "Please stop mhvtl & edit $MHVTL_CONFIG_PATH/library_contents to suit your requirements"
	cat > $MHVTL_CONFIG_PATH/library_contents << CONF_SAMPLE
VERSION: 2

Drive 1: XYZZY_A1
Drive 2: XYZZY_A2
Drive 3: XYZZY_A3
Drive 4: XYZZY_A4

Picker 1:

MAP 1:
MAP 2:
MAP 3:
MAP 4:

# Slot 1 - ?, no gaps
# Slot N: [barcode]
# [barcode]
# a barcode is comprised of three fields: [Leading] [identifier] [Trailing]
# Leading "CLN" -- cleaning tape
# Leading "W" -- WORM tape
# Leading "NOBAR" -- will appear to have no barcode
# If the barcode is at least 8 character long, then the last two characters are Trailing
# Trailing "S3" - SDLT600
# Trailing "X4" - AIT-4
# Trailing "L1" - LTO 1
# Trailing "TA" - T10000+
# Trailing "JA" - 3592+
# Trailing "JB" - 3592E05+
# Trailing "JW" - WORM 3592+
# Trailing "JX" - WORM 3592E05+
#
Slot 1: SDLT01S3
Slot 2: SDLT02S3
Slot 3: SDLT03S3
Slot 4: SDLT04S3
Slot 5: SDLT05S3
Slot 6: SDLT06S3
Slot 7: SDLT07S3
Slot 8: SDLT08S3
Slot 9: SDLT09S3
Slot 10:
Slot 11: ULT001L1
Slot 12: ULT002L2
Slot 13: ULT003L3
Slot 14: ULT004L4
Slot 15: ULT005L1
Slot 16: ULT006L2
Slot 17: ULT007L3
Slot 18: ULT008L4
Slot 19: ULT009L1
Slot 20:
Slot 21: 8MM001X4
Slot 22: 8MM002X4
Slot 23: 8MM003X4
Slot 24: 8MM004X4
Slot 25:
Slot 26:
Slot 27:
Slot 28:
Slot 29:
Slot 30:
Slot 31: CLN001L1
Slot 32: CLN002L1
Slot 33: CLN003L1
CONF_SAMPLE
fi

case "$1" in
    start)
	load_vtl=`grep " mhvtl$" /proc/devices|awk '{print $2}'`
	if [ "X$load_vtl" == "X" ]; then
		modprobe mhvtl opts=$VTL_DEBUG
	fi

	hba=`ls /proc/scsi/mhvtl|tail -1`
	if [ "X$hba" == "X" ]; then
		echo "Incorrect (or no) kernel module loaded to feed these daemons."
		echo ""
		echo "Need mhvtl kernel module version at least 0.16.0"
		echo ""
		echo "Please see http://linuxvtl.googlepages.com"
		exit 1
	fi
	vtlMidVersion=`grep version /proc/scsi/mhvtl/$hba 2> /dev/null|awk '{print $5}'|awk -F. '{print $2}'`
	if [ $vtlMidVersion -ne 16 ]; then
		echo "Incorrect kernel module for these daemons."
		echo -e "Should be at 0.16.x\n"
		echo -e "Please see http://linuxvtl.googlepages.com\n"
		exit 1
	fi

	# Load sg driver if not already loaded..
	sg=`grep " sg$" /proc/devices | awk '{print $2}'`
	if [ "X$sg" == "X" ]; then
		/sbin/modprobe sg
		sleep 1
	fi

	chown -R $USER:$USER $MHVTL_CONFIG_PATH
	chmod 770 /opt/vtl

	# creating devices
	make_vtl_devices $USER > /dev/null

	# Now correct file permissions..
	chown -R $USER:$USER /opt/vtl /dev/mhvtl[0-9]

	# Build Library media
	make_vtl_media $USER
	if [ $? != 0 ]; then
		echo "make_vtl_media failed.."
		exit 1
	fi

	# Build Library config - No. of drives & serial Nos etc..
	# This also loads each tape daemon.
	build_library_config $USER
	if [ $? != 0 ]; then
		echo "build_library_config failed.. Could not start daemons"
		exit 1
	fi

	if [ -f /etc/rc.status ]; then
		rc_status -v
	fi
	;;

    stop)
        echo "shutdown of mhvtl"
	for a in `ps -eo cmd |awk '/^vtltape -q/ {print $3}'`
	do
		echo "   Sending exit to $a"
		vtlcmd $a exit
		usleep 100 > /dev/null 2>&1 /dev/null
	done

	vtlcmd library exit

	if [ -f /etc/rc.status ]; then
		rc_status -v
	fi
	;;
    shutdown)
	# Remove kernel module (mhvtl) along with messageQ key.
        echo "Removing mhvtl kernel module"
	for a in `ps -eo cmd |awk '/^vtltape -q/ {print $3}'`
	do
		echo "   Sending exit to $a"
		vtlcmd $a exit
		usleep 100 > /dev/null 2>&1 /dev/null
	done

	# Send library daemon exit msg..
	vtlcmd library  exit

	# Sleep long enough for the daemons to see the exit commands.
	sleep 1

	rmmod mhvtl
	Q_EXISTS=`ipcs -q|grep 4d61726b|awk '{print $2}'`
	if [ "X$Q_EXISTS" != "X" ]; then
		ipcrm -q $Q_EXISTS
	fi
	if [ -f /etc/rc.status ]; then
		rc_status -v
	fi
	;;
    *)
	echo "Usage: $0 {start|stop|shutdown}"
	exit 1
esac
if [ -f /etc/rc.status ]; then
	rc_exit
fi
