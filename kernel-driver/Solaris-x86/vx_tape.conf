#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License, Version 1.0 only
# (the "License").  You may not use this file except in compliance
# with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
# Copyright 2005 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
#pragma ident	"@(#)vx_tape.conf	1.1	05/06/27 SMI"
#
#-----------------------------
# ON version of vx_tape.conf
#-----------------------------
#
#
# Define Different Drive Sizes:
#
#	Compute MSB blocks of X GB disk with dc(1):
#		X 1024 1024 1024***512/2 32^/16op10op
#	Compute LSB blocks of X GB disk with dc(1):
#		X 1024 1024 1024***512/2 32^%16op10op
#	With nhead = 128 and nsect = 128, Compute ncyl of X GB disk with dc(1):
#		X 1024 1024 1024***512/128 128*/16op10op
#	Example: for wombat-drive-1_5TB:
#		# dc
#		1024 512+1024 1024 1024***512/2 32^/16op10op
#		0
#		0
#		1024 512+1024 1024 1024***512/2 32^%16op10op
#		C0000000
#		3221225472
#		1024 512+1024 1024 1024***512/128 128*/16op10op
#		30000
#		196608
#
#	format is:	MSB, LSB		dtype, ncyl	nhead, nsect
#
wombat-drive-1GB=	0, 2097152,		0, 128,		128, 128;
wombat-drive-1TB=	0, 2147483648,		1, 128,		128, 128;
wombat-drive-1_5TB=	0, 3221225472,		8, 128,		128, 128;

#
# Define Different vx_tape HBA instances and children:
#
#	We don't define HBAs by default, other tests that live under pshot
#	(like the devfs testsuite) will fail if vx_tape is enabled by default.
#	The test scripts that use vx_tape should enable the required 
#	vx_tape.conf configuration (and restore a disabled vx_tape.conf).
#
# 	NOTE:	As of 05/06/27 the sd target driver does not support
#		devices >= 2TB. If you configure one format will
#		complain:
#			The capacity of this LUN is too large.
#			Reconfigure this LUN so that it is < 2TB.
#
#	Example:
#
#name="vx_tape" parent="pshot" bus-addr="1"
#	targ_0_0=	"wombat-drive-1GB",	"WOMBAT  1_0_0:1GB";
#
#name="vx_tape" parent="pshot" bus-addr="2"
#	targ_0_0=	"wombat-drive-1TB",	"WOMBAT  2_0_0:1TB"
#	targ_1_0=	"wombat-drive-1_5TB",	"WOMBAT  2_1_0:1.5TB";
#


#
# The following properties can be used to override tunables in the vx_tape
# driver.
#
#	vx_tape_collect_stats	0 means do not collect statistics.
#				Non-zero means to collect statistics.
#				Default value is 1.
#
#	vx_tape_yield_enable	Non-zero means that vx_tape should
#				periodically yield the CPU to allow other
#				activities to happen.  Default value is 1.
#
#	vx_tape_yield_period	Number of vx_tape I/O operation between
#				yields of the CPU.  Default is 1000.
#
#	vx_tape_yield_length	Amount of time in microseconds that vx_tape
#				should yield the CPU during its periodic
#				yields.  Default is 1000.
#
#	vx_tape_max_task		Maximum number of task elements in the task
#				queue for each vx_tape controller.  Default
#				is 16.
#
#	vx_tape_task_nthreads	Specifies the number of threads that should
#				be used to process a controller's task
#				queue.  By default this is set at run time
#				to the number of CPUs on the system.  It
#				should probably only be set in this file
#				for special purposes.
#
# The driver has the default values preset, so it is only necessary to
# define these properties in this file if you wish to override the default
# values.  The following commented lines can be used as a prototype for
# setting the properties.
#
#vx_tape_collect_stats=1;
#vx_tape_yield_enable=1;
#vx_tape_yield_period=1000;
#vx_tape_yield_length=1000;
#vx_tape_max_task=16;
#vx_tape_task_nthreads=<ncpu>;
