#!/bin/sh
#
# Parse lsscsi -g o/p to build a drive/library config for the 'vxlibrary'
# daemon.
#
# I would normally expect this to be run out of an rc script.
#
# * $Id: build_library_config,v 1.16.2.1 2006-08-06 07:58:44 markh Exp $
# *
# * Copyright (C) 2005 Mark Harvey markh794 at gmail dot com
# *                                mark_harvey at symantec dot com
# *
# * This program is free software; you can redistribute it and/or modify
# * it under the terms of the GNU General Public License as published by
# * the Free Software Foundation; either version 2 of the License, or
# * (at your option) any later version.
# *
# * This program is distributed in the hope that it will be useful,
# * but WITHOUT ANY WARRANTY; without even the implied warranty of
# * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# * GNU General Public License for more details.
# *
# * You should have received a copy of the GNU General Public License
# * along with this program; if not, write to the Free Software
# * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

export PATH=/usr/bin:$PATH

if [ $# != 1 ]; then
	echo "Usage: $0 username"
	exit 1
fi

USER=$1
TMP=/var/tmp/_build.$$
CONFIG=/etc/vtl/vxlib.conf
LIBCONTENTS=/etc/vtl/library_contents
USE_MIXED_DRIVES=1
OPTIONS=""
# OPTIONS=" -v -v"

if [ -x /usr/bin/lsscsi ]; then
	LSSCSI=/usr/bin/lsscsi
elif [ -x /bin/lsscsi ]; then
	LSSCSI=/bin/lsscsi
else
	echo "Can not find 'lsscsi' - Aborting...."
	exit 1
fi

echo "# Config file build `date`" > $CONFIG

count=`grep Drive $LIBCONTENTS|wc -l`

# If we can't find any existing devices, then add '$count` devices
# If USE_MIXED_DRIVES is set to 0, then all drives will be of same type
addDevices=`$LSSCSI -g | grep tape | grep 5400 | wc -l`
if test $addDevices -eq 0; then
	# Use num_tgts for a library full of IBM drives
	#echo $count > /sys/bus/pseudo/drivers/vtl/num_tgts
	# else use max_luns for a library with mixed drive types
	if test $USE_MIXED_DRIVES -eq 0; then
		echo $count > /sys/bus/pseudo/drivers/vtl/num_tgts
	else
		echo $count > /sys/bus/pseudo/drivers/vtl/max_luns

	echo 1 > /sys/bus/pseudo/drivers/vtl/add_host
fi

count=0

for a in `$LSSCSI -g | grep tape | grep 5400 | awk '{print $7}'`
do
	count=`expr $count + 1`
	# Start the vxtape daemon...
	su $USER -c "vtltape -q $count $OPTIONS"
	echo "Drive: $count"
	echo "Drive: $count" >> $CONFIG

	# Test Unit Ready - Clear init flag..
	sg_turs $a > /dev/null 2>&1

	# Earlier versions of lsscsi use Product serial,
	# so change to later syntax
	sg_inq $a |sed -e 's/Product serial/Unit serial/' > $TMP

	cat $TMP | grep "Vendor identification:" >> $CONFIG
	cat $TMP | grep "Product identification:" >> $CONFIG
	cat $TMP | grep "Product revision level:" >> $CONFIG
	cat $TMP | grep "Unit serial number:" >> $CONFIG
done

echo >> $CONFIG
echo "NumberDrives: $count" >> $CONFIG
echo "NumberSlots: `grep Slot $LIBCONTENTS|wc -l`" >> $CONFIG
echo "NumberMAP: `grep MAP $LIBCONTENTS|wc -l`" >> $CONFIG
echo "NumberPicker: `grep Picker $LIBCONTENTS|wc -l`" >> $CONFIG

rm -f $TMP

# Create any media specified in library config.
umask 002

# Cleaning carts
for a in `cat $LIBCONTENTS|grep ":"|awk '{print $3}'|grep ^CLN|sort -u`
do
	if [ ! -f /opt/vtl/$a ]; then
		su $USER -c "mktape -s 500 -t clean -m $a"
	fi
done

# WORM media
for a in `cat $LIBCONTENTS|grep ":"|awk '{print $3}'|grep ^W|sort -u`
do
	if [ ! -f /opt/vtl/$a ]; then
		su $USER -c "mktape -s 500 -t WORM -m $a"
	fi
done

# Rest must be Data
for a in `cat $LIBCONTENTS|grep ":"|awk '{print $3}'|sort -u`
do
	if [ ! -f /opt/vtl/$a ]; then
		su $USER -c "mktape -s 500 -t data -m $a"
	fi
done

